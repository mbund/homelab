apiVersion: apps/v1
kind: Deployment
metadata:
  name: haproxy
spec:
  replicas: 1
  selector:
    matchLabels:
      app: haproxy
  template:
    metadata:
      labels:
        app: haproxy
    spec:
      serviceAccountName: tailscale
      containers:
        - name: haproxy
          imagePullPolicy: IfNotPresent
          image: docker.io/haproxy:2.8.1
          ports:
            - containerPort: 80
            - containerPort: 443
          volumeMounts:
            - name: haproxy-config
              mountPath: /usr/local/etc/haproxy/haproxy.cfg
              subPath: haproxy.cfg
        - name: tailscale
          imagePullPolicy: IfNotPresent
          image: ghcr.io/tailscale/tailscale:v1.44.0
          env:
            - name: TS_KUBE_SECRET
              value: tailscale-login
            - name: TS_USERSPACE
              value: "false"
            - name: TS_AUTHKEY
              valueFrom:
                secretKeyRef:
                  name: tailscale-auth
                  key: TS_AUTHKEY
            - name: TS_AUTH_ONCE
              value: "true"
            - name: TS_ACCEPT_DNS
              value: "true"
            - name: TS_EXTRA_ARGS
              value: --hostname=homelab-public-proxy
          securityContext:
            capabilities:
              add:
                - NET_ADMIN
          resources:
            requests:
              cpu: 10m
              memory: 32Mi
            limits:
              cpu: 500m
              memory: 1024Mi
      volumes:
        - name: haproxy-config
          configMap:
            name: haproxy-configmap
            items:
              - key: haproxy.cfg
                path: haproxy.cfg
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: haproxy-configmap
data:
  haproxy.cfg: |
    global
        log /dev/log    local0
        log /dev/log    local1 notice
        stats timeout 30s
        daemon

    defaults
            log     global
            mode tcp
            option tcplog
            option  dontlognull
            timeout connect 5000
            timeout client  50000
            timeout server  50000

    frontend https
            bind *:443
            default_backend https_backend
    backend https_backend
            server server1 ingress-nginx-public-controller:443 send-proxy-v2
