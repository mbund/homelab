version: '3'

tasks:
  bootstrap:
    cmds:
      - cmd: kubectl create namespace argocd
        ignore_error: true
      - task: bootstrap:argocd
      - task: bootstrap:root

  bootstrap:argocd:
    internal: true
    dir: bootstrap/argocd
    cmds:
      - helm template --dependency-update --include-crds --namespace argocd --values values-seed.yaml argocd . | kubectl apply -n argocd -f -
      - kubectl -n argocd wait --timeout=60s --for condition=Established crd/applications.argoproj.io crd/applicationsets.argoproj.io

  bootstrap:root:
    internal: true
    dir: bootstrap/root
    cmds:
      - helm template --include-crds --namespace argocd --values values-seed.yaml argocd . | kubectl apply -n argocd -f -

  dev:
    aliases:
      - default
    dir: dev
    env:
      KUBECONFIG: "{{.USER_WORKING_DIR}}/kubeconfig-dev.yaml"
    cmds:
      - echo $KUBECONFIG
      - k3d cluster start homelab-dev || k3d cluster create --config k3d-dev.yaml
      - k3d kubeconfig get homelab-dev > kubeconfig-dev.yaml
      - task: bootstrap

  dev:cleanup:
    cmds:
      - k3d cluster delete homelab-dev
